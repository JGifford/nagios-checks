#!/bin/bash

# ---------------------------------------------------------
# Settings that might be useful to change
#DEBUG="true"
# That's all, stop editing!
# ---------------------------------------------------------

PROGNAME=$(basename $0)
RELEASE="Revision 0.8"

#################################################
## To-do list
##
# check if WARNING is zero (CRITICAL, too?)
# check if WARN & CRIT are integegers
#################################################

[ -n "$DEBUG" ] && echo "DEBUG is turned on"

#############################
# Standard Nagios exit values
E_SUCCESS="0"
E_WARNING="1"
E_CRITICAL="2"
E_UNKNOWN="3"
#############################

print_release() {
    echo "$RELEASE"
    exit ${E_UNKNOWN}

}
print_usage() {
    echo ""
    echo "$PROGNAME $RELEASE - check memory utilization script for Nagios"
    echo "(Uses \"free -m\"...)"
    echo ""
    echo "Usage: $PROGNAME -w warning -c critical"
    echo ""
    echo "Note: script doesn't check if -c is greater than -w"
    echo ""
    exit ${E_UNKNOWN}
}

while getopts "w:c:huv" option
do
  case $option in
      w) warning_used=$OPTARG ;;
      c) critical_used=$OPTARG ;;
      h) print_usage
          exit ${E_UNKNOWN} ;;
      u) print_usage
          exit ${E_UNKNOWN} ;;
      v) print_release
          exit ${E_UNKNOWN} ;;
      *) exit ${E_UNKNOWN} ;;
  esac
done


percent_used=`free -m |awk '/Mem:/ { total=$2 } /buffers\/cache/ { used=$3 } END { print int(100*used/total)}\
'`

if [ $percent_used -lt $warning_used ]
then
    echo "OK - $percent_used% memory used"
    exit ${E_SUCCESS}
elif [ $percent_used -lt $critical_used ]
then
    echo "WARNING - $percent_used% memory used"
    exit ${E_WARNING}
elif [ $percent_used -ge $critical_used ]
then
    echo "CRITICAL - $percent_used% memory used"
    exit ${E_CRITICAL}
else
   echo "Huh?"
   exit ${E_UNKNOWN}
fi
# If we get to here, not sure what's happening
exit ${E_UNKNOWN}
